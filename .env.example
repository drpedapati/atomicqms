# ============================================
# AtomicQMS GitHub OAuth Configuration
# ============================================
#
# This file contains credentials for GitHub OAuth authentication.
#
# SETUP INSTRUCTIONS:
# 1. Copy this file: cp .env.example .env
# 2. Create GitHub OAuth App at: https://github.com/settings/developers
# 3. Set callback URL to: http://localhost:3001/user/oauth2/github/callback
# 4. Copy Client ID and Client Secret from GitHub to this file
# 5. Run: ./setup-github-oauth.sh
#
# SECURITY WARNING:
# - DO NOT commit .env to version control! (already in .gitignore)
# - Treat these credentials like passwords
# - For production, use HTTPS and secure secrets management
#

# --------------------------------------------
# Required: GitHub OAuth App Credentials
# --------------------------------------------
# Get these from: https://github.com/settings/developers
# After creating your OAuth App, you'll see these values

# Client ID - Visible on the OAuth App page
# Format: Starts with "Iv1." (OAuth Apps) or "Ov-" (newer format)
# Example: Iv1.a1b2c3d4e5f6g7h8
GITHUB_CLIENT_ID=Iv1.xxxxxxxxxxxx

# Client Secret - Click "Generate a new client secret"
# IMPORTANT: Shown only once! Save it immediately
# Format: 40 character string
# Example: ghp_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p7q8r9s0
GITHUB_CLIENT_SECRET=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# --------------------------------------------
# Optional: Advanced Configuration
# --------------------------------------------
# Most users don't need to change these

# Authentication Source Name
# This name appears in the callback URL and login button
# Default: github
# Callback URL format: http://localhost:3001/user/oauth2/{NAME}/callback
# GITHUB_AUTH_SOURCE_NAME=github

# OAuth Scopes
# Controls what information Gitea can access from GitHub
# Default scopes are minimal and recommended:
#   - read:user     = Read basic profile info (username, avatar)
#   - user:email    = Read email addresses
# Additional scopes (uncomment if needed):
#   - read:org      = Read organization membership (for team sync)
# GITHUB_OAUTH_SCOPES=read:user,user:email

# --------------------------------------------
# Examples for Different Scenarios
# --------------------------------------------

# Example 1: Basic setup (most common)
# Just fill in Client ID and Secret, use all defaults

# Example 2: Organization-only access
# Uncomment and add read:org to scopes:
# GITHUB_OAUTH_SCOPES=read:user,user:email,read:org

# Example 3: Custom authentication source name
# If you want a different name in the URL:
# GITHUB_AUTH_SOURCE_NAME=gh-sso
# Remember to update GitHub OAuth App callback URL to:
# http://localhost:3001/user/oauth2/gh-sso/callback

# --------------------------------------------
# Testing Your Configuration
# --------------------------------------------
# After filling in values:
# 1. Run: ./setup-github-oauth.sh
# 2. Check for success message
# 3. Open: http://localhost:3001/user/login
# 4. Look for "Sign in with GitHub" button
# 5. Click and authorize to test login

# --------------------------------------------
# Troubleshooting
# --------------------------------------------
# Problem: "incorrect_client_credentials" error
# Solution: Double-check Client ID and Secret match GitHub OAuth App
#
# Problem: "Redirect URI mismatch" error
# Solution: Verify callback URL in GitHub OAuth App is exactly:
#           http://localhost:3001/user/oauth2/github/callback
#
# Problem: No "Sign in with GitHub" button
# Solution: Run ./setup-github-oauth.sh and restart container
#
# See README.md for complete troubleshooting guide
