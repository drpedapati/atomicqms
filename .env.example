# ============================================
# AtomicQMS Environment Configuration
# ============================================
#
# SETUP INSTRUCTIONS:
# 1. Copy this file: cp .env.example .env
# 2. Fill in the appropriate values below
# 3. Run setup scripts as needed (see README.md)
#
# SECURITY WARNING:
# - DO NOT commit .env to version control! (already in .gitignore)
# - Treat these credentials like passwords
# - For production, use HTTPS and secure secrets management
#

# ============================================
# Container Configuration
# ============================================
# Container names from docker-compose.yml
# Change these if you customize container_name in docker-compose.yml

# Main Gitea container name
ATOMICQMS_CONTAINER=atomicqms

# Actions runner container name
ATOMICQMS_RUNNER_CONTAINER=atomicqms-runner

# ============================================
# GitHub OAuth Authentication
# ============================================
# Required for GitHub OAuth Single Sign-On
# Get these from: https://github.com/settings/developers
# Setup: ./setup-github-oauth.sh

# Client ID - Visible on the OAuth App page
# Format: Starts with "Iv1." (OAuth Apps) or "Ov-" (newer format)
# Example: Iv1.a1b2c3d4e5f6g7h8
GITHUB_CLIENT_ID=Iv1.xxxxxxxxxxxx

# Client Secret - Click "Generate a new client secret"
# IMPORTANT: Shown only once! Save it immediately
# Format: 40 character string
# Example: ghp_1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p7q8r9s0
GITHUB_CLIENT_SECRET=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Optional: Advanced OAuth Configuration
# Authentication Source Name (appears in callback URL and login button)
# Default: github
# GITHUB_AUTH_SOURCE_NAME=github

# OAuth Scopes (default: read:user,user:email)
# Add read:org for organization membership sync
# GITHUB_OAUTH_SCOPES=read:user,user:email

# ============================================
# Gitea Actions (for AI Assistant)
# ============================================
# Required for Claude AI Assistant integration
# Get from: Site Administration → Actions → Runners → Create new Runner
# Setup: ./setup-claude-assistant.sh

# Runner Registration Token
RUNNER_TOKEN=your_runner_registration_token_here

# Public URL for your AtomicQMS instance (used by workflows)
# Update if deploying to production domain
GITEA_SERVER_URL=http://localhost:3001

# ============================================
# Auto-Init Service (Optional)
# ============================================
# Automatically adds AI assistant files to new repositories
# Enable: docker compose --profile auto-init up -d auto-init

# Auto-init container name
ATOMICQMS_AUTO_INIT_CONTAINER=atomicqms-auto-init

# Git user for auto-commits
AUTO_INIT_GIT_USER_NAME=AtomicQMS Auto-Init
AUTO_INIT_GIT_USER_EMAIL=autoinit@atomicqms.local

# How often to check for new repos (in seconds)
# Default: 300 (5 minutes)
AUTO_INIT_CHECK_INTERVAL=300

# --------------------------------------------
# Troubleshooting
# --------------------------------------------
# OAuth: "incorrect_client_credentials" error
#   → Double-check Client ID and Secret match GitHub OAuth App
#
# OAuth: "Redirect URI mismatch" error
#   → Verify callback URL: http://localhost:3001/user/oauth2/github/callback
#
# Actions: Runner not connecting
#   → Verify RUNNER_TOKEN is valid and not expired
#
# See README.md for complete troubleshooting guide
